name: Git Hub Pipeline for Dev Environment

on:
  push:
    branches:
      - Dev  # Trigger deployment on push to the Dev branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}  

      # Set up Python environment
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Choose the Python version that matches your Lambda runtime

      # Debug: List files in Lambda function 1 directory
      - name: List files in Lambda function 1 directory
        run: |
          cd aws/dev/lambda/Test_lambda1
          ls -al  # List files in the directory to ensure Test_lambda1.py exists

      #- name: Install dependencies for all Lambda functions
      - name: Install dependencies for all Lambda functions
        run: |
          # Install dependencies for each Lambda function (if any requirements.txt exists)
          for lambda_dir in aws/dev/lambda/*; do
            if [ -d "$lambda_dir" ]; then
              echo "Installing dependencies for $lambda_dir"
              if [ -f "$lambda_dir/requirements.txt" ]; then
                cd $lambda_dir
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                cd -  # Go back to the original directory
              fi
            fi
          done

      - name: Zip all Lambda functions
        run: |
          # Loop through each Lambda function directory and create a deployment package
          for lambda_dir in aws/dev/lambda/*; do
            if [ -d "$lambda_dir" ]; then
              # Create the zip file for each Lambda function
              lambda_name=$(basename "$lambda_dir")
              zip -r "aws/dev/lambda/$lambda_name.zip" "$lambda_dir"
            fi
          done

      - name: Deploy Lambda functions
        run: |
          # Loop through each Lambda function and deploy the zipped package
          for lambda_dir in aws/dev/lambda/*; do
            if [ -d "$lambda_dir" ]; then
              lambda_name=$(basename "$lambda_dir")
              # Check if the Lambda function exists
              if ! aws lambda get-function --function-name $lambda_name --region ${{ env.AWS_DEFAULT_REGION }}; then
                echo "Lambda function $lambda_name does not exist, creating it."
                aws lambda create-function \
                  --function-name $lambda_name \
                  --runtime python3.8 \
                  --role arn:aws:iam::596941798972:role/LambdaExecutionRole_GitHub_Actions \
                  --handler "$lambda_name.handler" \
                  --zip-file fileb://aws/dev/lambda/$lambda_name.zip \
                  --region ${{ env.AWS_DEFAULT_REGION }}
              else
                echo "Updating Lambda function $lambda_name"
                aws lambda update-function-code \
                  --function-name $lambda_name \
                  --zip-file fileb://aws/dev/lambda/$lambda_name.zip \
                  --region ${{ env.AWS_DEFAULT_REGION }}
              fi
            fi
          done
