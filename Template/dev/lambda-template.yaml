AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to deploy a Lambda function and its execution role.

Parameters:
  Environment:
    Type: String
    Description: Deployment environment (e.g., dev, qa, master)
  S3Bucket:
    Type: String
    Description: Name of the S3 bucket containing the Lambda code

Resources:
  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub lambda-execution-role-${Environment}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # Lambda Function
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub my-lambda-function-${Environment}
      Runtime: python3.9
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: my-lambda-code.zip  # Replace this with the correct file name
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          ENV: !Ref Environment

Outputs:
  LambdaFunctionArn:
    Description: ARN of the deployed Lambda function
    Value: !GetAtt MyLambdaFunction.Arn
